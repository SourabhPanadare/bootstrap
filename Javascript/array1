/*-------------------------------Javascript Array-------------------------*/
  /*------------------Creating Javascript Array---------------*/
  a. Array Constructor:- new Array() or Array()

  var athletes = new Array(3); // creates an array with initial size 3
  var scores = new Array(1, 2, 3); // create an array with three numbers 1,2 3
  var signs = new Array('Red'); // creates an array with one element 'Red'

  b. Array literal notation:- [element1, element2, element3];

  var emptyArray = []; // empty array
  var colors = ['red', 'green', 'blue'];

  /*-----------------Accessing Javascript Array--------------*/
  var mountains = ['Everest', 'Fuji', 'Nanga Parbat'];

  console.log(mountains[0]); // 'Everest'
  console.log(mountains[1]); // 'Fuji'

  /*-----------------Size of an array----------------------*/
  var mountains = ['Everest', 'Fuji', 'Nanga Parbat'];

  console.log(mountains.length);

  /*------------------Basic operations on arrays-----------*/
  var seas = ['Black Sea', 'Caribbean Sea', 'North Sea', 'Baltic Sea'];

  console.log(Array.isArray(seas)); // true
  console.log(seas.toString()); // Black Sea,Caribbean Sea,North Sea,Baltic Sea
  console.log(seas.valueOf());
  console.log(seas.join('|'));  // Black Sea|Caribbean Sea|North Sea|Baltic Sea

/*---------------------Array Push And Pop Example-----------------------*/
  a. Push Method:- Allows you to add one or more elements to the end of the array

  var stack = [];
  stack.push(1);  //[1]
  stack.push(2);  //[1,2]
  stack.push(3);  //[1,2,3]

  b. Pop Method:- Allows you to add one or more elements to the end of the array

  var stack = [1,2,3]
  stack.pop(); //[1,2]
  stack.pop(); //[1]
  stack.pop(); //[]

  ex.Reverse a string:-

  function reverse(str) {
      var stack = [];
      // push letter into stack
      for (var i = 0; i < str.length; i++) {
          stack.push(str[i]);
      }
      // pop letter from the stack
      var reverseStr = '';
      while (stack.length > 0) {
          reverseStr += stack.pop();
      }
      return reverseStr;
  }

  console.log(reverse('JavaScript Stack')); //kcatS tpircSavaJ

/*----------------------- Array Splice: Delete, Insert, and Replace------------*/

  Allows you to insert new elements into the middle of an array.
  You can use this method to delete and replace existing elements as well.

  Array.splice(position,num);

  var scores = [1, 2, 3, 4, 5];
  var deletedScores = scores.splice(0,3);

  console.log(scores);          //[1,2,3] num = 3
  console.log(deletedScores);   //[4,5]

  /*------------Inserting elements using JavaScript array splice-------*/

  var colors = ['red', 'green', 'blue'];
  colors.splice(2, 0, 'purple');          //["red", "green", "purple", "blue"]

  /*------------Replacing elements using JavaScript array splice---------*/

  var languages = ['C', 'C++', 'Java', 'JavaScript'];
  languages.splice(1, 1, 'Python');       //["C", "Python", "Java", "JavaScript"]

/*---------------------- Sorting Array Elements--------------------------*/

  Allows you to sort elements of an array in place

  var animals = [
      'cat', 'dog', 'elephant', 'bee', 'ant'
  ];

  animals.sort(); //["ant", "bee", "cat", "dog", "elephant"]

  animals.sort(function (a, b) {    // descending order
      if (a > b) {
          return -1;
      }
      if (b > a) {
          return 1;
      }
      return 0;
  });

  var scores = [
      9, 80, 10, 20, 5, 70
  ];

  scores.sort(function (a, b) {   //sort numbers in ascending order
      return a - b;
  });

  /*--------------------Common Array String------------------------*/

  var employees = [
      {name: 'John', salary: 90000, hireDate: "July 1, 2010"},
      {name: 'David', salary: 75000, hireDate: "August 15, 2009"},
      {name: 'Ana', salary: 80000, hireDate: "December 12, 2011"}
  ];

  /*-------------------Sorting an array of objects by a specified property--------*/

  function displayList(employees) {
      employees.forEach(function (e) {
          console.log('name:' + e.name +
              ';salary:' + e.salary +
              ';hireDate:' + e.hireDate);
      });
  }

  /*-------------------Sorting objects by number property-----------*/

  employees.sort(function (x, y) {
      return x.salary - y.salary;
  });
  // display the employee list
  displayList(employees);

  /*------------------Sorting objects by string property------------*/

  employees.sort(function (x, y) {
      var a = x.name.toUpperCase(),
          b = y.name.toUpperCase();
      if (a > b) {
          return 1;
      }
      if (a < b) {
          return -1;
      }
      return 0;
  });
  displayList(employees);

  /*----------------Optimizing JavaScript Array sort method------------*/

  var lengths = rivers.map(function (e, i) {
      return {index: i, value: e.length };
  });

  // sorting the lengths array containing the lengths of river names
  lengths.sort(function (a, b) {
      return +(a.value > b.value) || +(a.value === b.value) - 1;
  });

  // copy element back to the array
  var sortedRivers = lengths.map(function (e) {
      return rivers[e.index];
  });

  console.log(sortedRivers); // ["Nile", "Congo", "Amazon", "Rio-Grande", "Mississippi"]
